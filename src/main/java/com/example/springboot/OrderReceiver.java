package com.example.springboot;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

import java.util.*;

@SpringBootApplication
public class OrderReceiver {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private MenuItemRepository menuItemRepository;

    float totalPrice = 0;

    Map<String, Integer> orderMap = new LinkedHashMap<>();
    ArrayList<MenuItem> orderedPizza = new ArrayList<>();
    ArrayList<MenuItem> freePizza = new ArrayList<>();


    @Bean
    public void orderPizza() {
        boolean isOrdered = false;
        while (!isOrdered) {
            isOrdered = true;
            for (String item : getOrder().split(" ")) {
                if (menuItemRepository.existsByName(item)) {
                    MenuItem menuItem = menuItemRepository.findByName(item);
                    totalPrice += menuItem.getPrice();

                    if(orderMap.containsKey(item))
                        orderMap.put(item, orderMap.get(item)+1);
                    else
                        orderMap.put(item, 1);

                    if(menuItem.getName().contains("pizza"))
                        orderedPizza.add(menuItem);
                } else {
                    System.out.println("Please check spelling and repeat: " + item);
                    isOrdered = false;
                    totalPrice = 0;
                    orderMap.clear();
                }
            }
        }
        if(isFreePizza(orderedPizza.size()) == 0)
            specialOffer();

        freePizza();
        printOrder(totalPrice, orderMap);
        if(freePizza.size() > 0)
            System.out.println("You got for free: " + freePizza);
    }

    private void specialOffer() {

            System.out.println("We have a special offer \"Each third pizza is free\". You may order one more pizza free.\n Print \"_no\" for discard");
            Scanner scanner = new Scanner(System.in);
            String additionalOrder = scanner.nextLine();
            if(!additionalOrder.contains("_no")) {
                for (String additionalItem : additionalOrder.split(" ")) {
                    if (menuItemRepository.existsByName(additionalItem)) {
                        MenuItem additionalMenuItem = menuItemRepository.findByName(additionalItem);
                        totalPrice += additionalMenuItem.getPrice();

                        if (additionalItem.contains("pizza"))
                            orderedPizza.add(menuItemRepository.findByName(additionalItem));
                        if (orderMap.containsKey(additionalItem))
                            orderMap.put(additionalItem, orderMap.get(additionalItem) + 1);
                        else
                            orderMap.put(additionalItem, 1);

                    }else
                        System.out.println("Please check spelling and repeat: " + additionalItem);
                }
            }
    }

    private void freePizza(){
        for (int i = 1; i <= orderedPizza.size(); i++) {
            if(isFreePizza(i) == 1){
                orderedPizza.sort(getCompByName());
                freePizza.add(orderedPizza.get(i - 1));
                totalPrice -= orderedPizza.get(i - 1).getPrice();
            }
        }
    }
    public static Comparator getCompByName()
    {
        return new Comparator<MenuItem>(){
            @Override
            public int compare(MenuItem o1, MenuItem o2)
            {
                return Float.compare(o2.getPrice(), o1.getPrice());
            }
        };
    }

    private int isFreePizza(int amount) {
        if (amount % 3 == 0)
            return 1; // already free pizza
        else if((amount+1) % 3 == 0)
            return 0; // can order one more pizza for free
        else
            return -1;
    }

    private String getOrder() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter your order: ");
        return scanner.nextLine();
    }

    private void printOrder(float totalPrice, Map<String, Integer> orderMap) {
        System.out.println("Your order is: ");
        for (Map.Entry<String, Integer> entry : orderMap.entrySet()) {
            System.out.println(entry.getValue() + " " + entry.getKey());
        }
        System.out.println("Total price is: " + String.format("%.2f", totalPrice));
    }

}
